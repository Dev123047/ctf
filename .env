# --- General Application Settings ---

# Node.js environment: 'development' for development, 'production' for deployment
# In development, more detailed error messages and token visibility are enabled.
NODE_ENV=development

# Port for your Express server to listen on. Default is 3000 if not specified.
PORT=3000

# --- Authentication & Admin Settings ---

# A strong, random string used for signing JSON Web Tokens (JWTs).
# GENERATE A LONG, RANDOM STRING HERE (e.g., using a password generator)
JWT_SECRET=<YOUR_VERY_STRONG_RANDOM_SECRET_KEY_HERE>

# The email address that will have administrative privileges.
# This email needs to be registered like any other user to get a one-time token,
# then authenticated to receive the admin auth_token cookie.
ADMIN_EMAIL=admin@example.com

# --- Email Sending Configuration (for one-time tokens) ---
# IMPORTANT: If you commented out the email sending logic in routes/registration.js,
# these settings are not strictly necessary for the app to run,
# but they are good to have for potential future use or if you re-enable email.

# SMTP server address (e.g., smtp.gmail.com, smtp.outlook.com)
SMTP_SERVER=smtp.example.com

# SMTP port (e.g., 587 for STARTTLS, 465 for SSL/TLS)
SMTP_PORT=587

# Set to 'true' if your SMTP server uses SSL/TLS (port 465 typically), 'false' for STARTTLS (port 587).
# Note: For Gmail, use port 587 and SMTP_SECURE=false, or port 465 and SMTP_SECURE=true.
SMTP_SECURE=false

# Username for your SMTP server (usually your full email address)
SMTP_USERNAME=your_email@example.com

# Password for your SMTP server. For Gmail, you might need an "App password" if you have 2FA enabled.
SMTP_PASSWORD=your_email_password

# The email address that appears as the sender of the one-time token emails.
# Should generally match SMTP_USERNAME for most providers.
SENDER_EMAIL=your_email@example.com